rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isParticipant(participants) {
      return isAuthenticated() && request.auth.uid in participants;
    }

    function isRequestParticipant(data) {
      return isAuthenticated() && 
        (request.auth.uid == data.senderId || 
         request.auth.uid == data.receiverId);
    }

    // User collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    // Swap requests collection rules
    match /swapRequests/{requestId} {
      allow read: if isAuthenticated();
      
      // Simplified create rule
      allow create: if isAuthenticated() && 
                   request.resource.data.senderId == request.auth.uid;
      
      // Simplified update rule for status changes
      allow update: if isAuthenticated() && 
                   (resource.data.senderId == request.auth.uid || 
                    resource.data.receiverId == request.auth.uid);
    }

    // Chat collection rules
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        isParticipant(resource.data.participants);
      
      allow create: if isAuthenticated() && 
        isParticipant(request.resource.data.participants);
      
      allow update: if isAuthenticated() && 
        isParticipant(resource.data.participants);

      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
          isParticipant(get(/databases/$(database)/documents/chats/$(chatId)).data.participants);
        
        allow create: if isAuthenticated() && 
          request.auth.uid == request.resource.data.senderId && 
          isParticipant(get(/databases/$(database)/documents/chats/$(chatId)).data.participants);
      }
    }
  }
}
